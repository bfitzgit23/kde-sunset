From 23d202d3c6cd4451bd8e50848474156b38c1c65e Mon Sep 17 00:00:00 2001
From: Andreas Sturmlechner <asturm@gentoo.org>
Date: Mon, 7 Dec 2020 14:32:49 +0100
Subject: [PATCH] Revert "improve display of branches/tags in contextmenu"

This reverts commit b68c3e769fce2cf29e0cb1965e2d260783fb964b.
---
 src/mainimpl.cpp | 98 ++++++++++++++++++++++++++++++------------------
 1 file changed, 62 insertions(+), 36 deletions(-)

diff --git a/src/mainimpl.cpp b/src/mainimpl.cpp
index 5109055..39e6af5 100644
--- a/src/mainimpl.cpp
+++ b/src/mainimpl.cpp
@@ -1322,31 +1322,23 @@ void MainImpl::doUpdateRecentRepoMenu(SCRef newEntry) {
 	settings.setValue(REC_REP_KEY, newRecents);
 }
 
-static void prepareRefSubmenu(QMenu* menu, const QStringList& refs, const QChar sep = '/') {
-
-	FOREACH_SL (it, refs) {
-		const QStringList& parts(it->split(sep, QString::SkipEmptyParts));
-		QMenu* add_here = menu;
-		FOREACH_SL (pit, parts) {
-			if (pit == parts.end() - 1) break;
-			QMenu* found = add_here->findChild<QMenu*>(*pit, Qt::FindDirectChildrenOnly);
-			if(!found) {
-				found = add_here->addMenu(*pit);
-				found->setObjectName(*pit);
-			}
-			add_here = found;
-		}
-		QAction* act = add_here->addAction(*it);
-		act->setData("Ref");
+static int cntMenuEntries(const QMenu& menu) {
+
+	int cnt = 0;
+	QList<QAction*> al(menu.actions());
+	FOREACH (QList<QAction*>, it, al) {
+		if (!(*it)->isSeparator())
+			cnt++;
 	}
+	return cnt;
 }
 
 void MainImpl::doContexPopup(SCRef sha) {
 
 	QMenu contextMenu(this);
-	QMenu contextBrnMenu("Branches...", this);
+	QMenu contextBrnMenu("More branches...", this);
+	QMenu contextTagMenu("More tags...", this);
 	QMenu contextRmtMenu("Remote branches...", this);
-	QMenu contextTagMenu("Tags...", this);
 
 	connect(&contextMenu, SIGNAL(triggered(QAction*)), this, SLOT(goRef_triggered(QAction*)));
 
@@ -1391,29 +1383,63 @@ void MainImpl::doContexPopup(SCRef sha) {
 		if (ActPop->isEnabled())
 			contextMenu.addAction(ActPop);
 
-		contextMenu.addSeparator();
+		const QStringList& bn(git->getAllRefNames(Git::BRANCH, Git::optOnlyLoaded));
+		const QStringList& rbn(git->getAllRefNames(Git::RMT_BRANCH, Git::optOnlyLoaded));
+		const QStringList& tn(git->getAllRefNames(Git::TAG, Git::optOnlyLoaded));
+		QAction* act = NULL;
 
-		QStringList bn(git->getAllRefNames(Git::BRANCH, Git::optOnlyLoaded));
-		bn.sort();
-		prepareRefSubmenu(&contextBrnMenu, bn);
-		contextMenu.addMenu(&contextBrnMenu);
-		contextBrnMenu.setEnabled(bn.size() > 0);
+		FOREACH_SL (it, rbn) {
+			act = contextRmtMenu.addAction(*it);
+			act->setData("Ref");
+		}
 
-		QStringList rbn(git->getAllRefNames(Git::RMT_BRANCH, Git::optOnlyLoaded));
-		rbn.sort();
-		prepareRefSubmenu(&contextRmtMenu, rbn);
-		contextMenu.addMenu(&contextRmtMenu);
-		contextRmtMenu.setEnabled(rbn.size() > 0);
+		// halve the possible remaining entries for branches and tags
+		int remainingEntries = (MAX_MENU_ENTRIES - cntMenuEntries(contextMenu));
+		if (!contextRmtMenu.isEmpty()) --remainingEntries;
+		int tagEntries = remainingEntries / 2;
+		int brnEntries = remainingEntries - tagEntries;
 
-		QStringList tn(git->getAllRefNames(Git::TAG, Git::optOnlyLoaded));
-		tn.sort();
-		prepareRefSubmenu(&contextTagMenu, tn);
-		contextMenu.addSeparator();
-		contextMenu.addMenu(&contextTagMenu);
-		contextTagMenu.setEnabled(tn.size() > 0);
+		// display more branches, if there are few tags
+		if (tagEntries > tn.count())
+			tagEntries = tn.count();
 
-	}
+		// one branch less because of the "More branches..." submenu
+		if ((bn.count() > brnEntries) && tagEntries)
+			tagEntries++;
+
+		if (!bn.empty())
+			contextMenu.addSeparator();
+
+		FOREACH_SL (it, bn) {
+			if (   cntMenuEntries(contextMenu) < MAX_MENU_ENTRIES - tagEntries
+			    || (*it == bn.last() && contextBrnMenu.isEmpty()))
+				act = contextMenu.addAction(*it);
+			else
+				act = contextBrnMenu.addAction(*it);
 
+			act->setData("Ref");
+		}
+		if (!contextBrnMenu.isEmpty())
+			contextMenu.addMenu(&contextBrnMenu);
+
+		if (!contextRmtMenu.isEmpty())
+			contextMenu.addMenu(&contextRmtMenu);
+
+		if (!tn.empty())
+			contextMenu.addSeparator();
+
+		FOREACH_SL (it, tn) {
+			if (   cntMenuEntries(contextMenu) < MAX_MENU_ENTRIES
+			    || (*it == tn.last() && contextTagMenu.isEmpty()))
+				act = contextMenu.addAction(*it);
+			else
+				act = contextTagMenu.addAction(*it);
+
+			act->setData("Ref");
+		}
+		if (!contextTagMenu.isEmpty())
+			contextMenu.addMenu(&contextTagMenu);
+	}
 	QPoint p = QCursor::pos();
 	p += QPoint(10, 10);
 	contextMenu.exec(p);
-- 
2.29.2

